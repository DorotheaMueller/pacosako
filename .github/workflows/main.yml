# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: |
          backend/target
          lib/target
        key: test-cache
        
    - name: Install SQLX-tooling
      run: cargo install sqlx-cli
        
    - name: Run library tests
      run: | 
        pwd
        cd lib
        cargo test
        cd ..
        
    - name: Run backend tests
      run: | 
        pwd
        cd backend
        mkdir -p data
        sqlx database create
        sqlx migrate run
        cargo test
        cd ..

  build:
    name: Build artifact
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
            
    - name: Install SQLX-tooling
      run: cargo install sqlx-cli
    
    - uses: actions/setup-node@v2
    
    - name: Install Elm
      run: |
        curl -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
        sudo npm install -g elm-spa@latest typescript uglify-js
        gunzip elm.gz
        chmod +x elm
        
    - name: Compile Server in release mode
      run: |
        cd backend
        mkdir -p data
        sqlx database create
        sqlx migrate run
        cargo build --release
        cd ..
    
    - name: Compile Frontend
      run: |
        mkdir -p target
        cp frontend/static/* target/
        cd frontend
        elm-spa build
        elm make src/Main.elm --output=../target/elm.js
        cd ..
        # Typescript
        tsc
