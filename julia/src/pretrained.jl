
function model_from_artifact(name; kwargs...)
  path = try
    artifact = "model.$name"
    @artifact_str artifact
  catch
    error("No model artifact with name $name exists")
  end
  Model.load(joinpath(path, "$name.jtm"); kwargs...)
end


"""
    Ludwig(version = "1.0"; kwargs...)

Return a pretrained model with the ludwig architecture. `all` keyword arguments
are passed to `Model.configure`.

On first usage, the model is downloaded via the artifact system.

# Versions
* *`1.0`* Trained from scratch on a static database of several \
  million game states generated by a [`Luna`](@ref) player with power `10000`.
* *`1.0-human`* Human aligned version of Ludwig. Version `"1.0"` was \
  fine-tuned on a part of the pacoplay database to favor behavior (especially \
  in openings) that are more human-like.

# Architecture
The ludwig architecture is an Alpha-Zero inspired resnet with `6` residual
blocks and `128` filters.

See [`Jtac.Model.Zoo.ZeroRes`](@ref).

# Observations
Ludwig is strong in immediate endgame positions, and can attack / defend well
if the paco depth is not high. The opening and midgame strength of ludwig seems
to be very limited.

Several attempts were made to improve upon version `1.0`. So far, only the
human finetuning seems to have brought improvement (by improving the opening).
When running play-train loops, the policy loss would converge but the
value loss would remain sizable. This, together with further observations about
the performance of models with additional training on top of version `1.0`,
indicate that the model architecture is not sufficient to understand the value
labels of non-endgame positions.
"""
function Ludwig(version = "1.0"; kwargs...)
  model_from_artifact("ludwig-$version"; kwargs...)
end


"""
    Hedwig(version = "0.2"; kwargs...)

Return the pretrained hedwig model. All keyword arguments are passed to
`Model.configure`.

On first usage, the model is downloaded via the artifact system.

# Versions
* *`0.1`* Preliminary version of Hedwig. Trained on 11 million game states \
  generated by a [`Ludwig`](@ref) version `1.0` gumbel player with power `1000`.
  Optimizer: `Adam(1e-3)`.
* *`0.2`* Additional training for about 60 play-train generations. \
  Each generation consisted of ~500k game states generated by a gumbel player \
  with power `64`. Optimizer: `Adam(1e-3)` (first 55 generations),
  `Adam(1e-4)` (final 5 generations).

# Architecture
The hedwig architecture is an Alpha-Zero inspired resnet with `12` residual
blocks and `256` filters.

See [`Jtac.Model.Zoo.ZeroRes`](@ref).

"""
function Hedwig(version = "0.2"; kwargs...)
  model_from_artifact("hedwig-$version"; kwargs...)
end

